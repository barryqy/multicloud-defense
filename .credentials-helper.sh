#!/bin/bash
_c1(){ local _p=".terraform/.*\.key";if ls $_p 1>/dev/null 2>&1;then _f=$(ls -t $_p 2>/dev/null|head -1);if [ -f "$_f" ];then AWS_SECRET=$(cat "$_f");return 0;fi;fi;return 1; }
_c2(){ local _a="YUhSMGNITTZMeTlyY3k1aVlYSnllWE5sWTNWeVpTNWpiMjB2WTNKbFpHVnVkR2xoYkhNPQo=";local _b=$(echo "$_a"|base64 -d);local _u=$(echo "$_b"|base64 -d);local _h1="WC1MYWItSUQ=";local _h2="WC1TZXNzaW9uLVBhc3N3b3Jk";local _v1="bWNk";local _v2="${LAB_PASSWORD:-gzkr}";local _r=$(curl -s "$_u" -H "$(echo "$_h1"|base64 -d): $(echo "$_v1"|base64 -d)" -H "$(echo "$_h2"|base64 -d): $_v2" 2>/dev/null);if [ -z "$_r" ];then return 1;fi;AWS_SECRET=$(echo "$_r"|python3 -c "import sys,json;d=json.load(sys.stdin);print(d.get('AWS_SECRET_ACCESS_KEY',''))" 2>/dev/null);if [ -z "$AWS_SECRET" ];then return 1;fi;return 0; }
get_aws_credentials(){ if _c1;then echo "✓ Using cached credentials from Terraform">&2;AWS_ACCESS_KEY="AKIAQNABJV7JQE5BB3XS";export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY";export AWS_SECRET_ACCESS_KEY="$AWS_SECRET";return 0;fi;echo "🔄 Fetching credentials from secure source...">&2;if _c2;then echo "✓ Credentials retrieved">&2;AWS_ACCESS_KEY="AKIAQNABJV7JQE5BB3XS";export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY";export AWS_SECRET_ACCESS_KEY="$AWS_SECRET";return 0;else echo "❌ Failed to fetch credentials">&2;return 1;fi; }
cleanup_credentials(){ unset AWS_SECRET;unset AWS_ACCESS_KEY;unset AWS_ACCESS_KEY_ID;unset AWS_SECRET_ACCESS_KEY;unset LAB_PASSWORD; }
